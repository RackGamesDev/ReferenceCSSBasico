/*css (cascade stylesheet) se usa para aplicar estilos al html, va por selectores y propiedad: valor;, funciona en cascada de arriba a abajo*/


/*SELECTORES:*/
h1{/*selector por etiqueta*/
    color:black;/*propiedad: valor;*/
}
.unaclase{/*selector por clase*/
    color:black;
}
.unaclase.otraclase#unid{/*si se concatenan asi se aplica solo a los elementos que cumplan todos los selectores*/
    color:black;
}
#unid{/*selector por id*/
    color:black;
}
h1,#unid{/*una sola hoja de estilos para varios selectores, incluso de distinto tipo*/
    color:black;
}
body{/*para aplicar estilos globalmente se puede hacer a etiquetas mas grandes como body o html*/
    color:black;
}
*{/*hace referencia a literalmente todo*/
    font-family: 'Courier New', Courier, monospace;/*se suele usar para fuentes*/
}
html{/*otra forma de referirse globalmente*/
    scroll-behavior: smooth;/*cambia la animacion de scroll*/
}
div p{/*esto afectaria a las etiquetas p que esten dentro de div, tambien vale con clases y ids, se puede concatenar mas afectando al ultimo*/
    color:black;
}
div>p{/*lo mismo pero solo si es directamente hijo de el elemento anterior*/
    color:black;
}
div+p{/*en este caso se aplica al primer elemento p que encuentre despues que este al mismo nivel*/
    color:black;
}
div~p{/*igual pero no solo el primero adelante, sino todos los p que esten al mismo nivel en adelante*/
    color:black;
}
/*PSEUDOCLASES:*/
a:link{/*estos estilos solo se aplican cuando una propiedad del elemento sea cierta, se pueden poner talcual y afecta a todo, link es cuando haya un enlace a algo*/
    color:black;
}
a:visited{/*cuando el link ya este visitado*/
    text-decoration: none;/*en el caso de los enlaces, los deja como un label normal*/
}
a:hover{/*cuando pases el raton por encima*/
    color:black;
}
a:active{/*cuando mantengas presionado con el raton*/
    color:black;
}
p:first-child{/*afecta solo al primer elemento hijo de algo*/
    color:black;
}
p:last-child{/*afecta solo al ultimo elemento hijo de algo*/
    color:black;
}
input:focus{/*si lo estas usando, usado sobretodo para inputs*/
    color: black;
}
p:nth-child(even){/*afecta a los pares o impares dentro de el elemento padre (even/odd)*/
    color: black;
}
:not(.activo){/*se refiere a todo lo que no cumpla el selector entre parentesis*/
    color: black;
}
/*hay muchos mas*/
/*PSEUDOELEMENTO:*/
p::first-line{/*los pseudoelementos afectan parcialmente a un elemento, se pueden poner talcual y afecta a todo, en este caso solo cambia la primera linea (tambien esta en last)*/
    color: black;
}
p::first-letter{/*igual pero con las letras, tambien esta last*/
    color: black;
}
p::after{/*afecta a lo que haya despues, tambien esta before*/
    color: black;
}
::marker{/*esto sirve para las listas, hace referencia al punto Â· */
    color: black;
}
::selection{/*hace referencia al texto seleccionado*/
    color: black;
}
/*POR SELECTOR:*/
a[target]{/*se refiere solo a los elementos con esa propiedad especificada*/
    color: black;
}
[target="_blank"]{/*se refiere a los que tengan la propiedad esa con el valor ese*/
    color: black;
    background-color: #f2f1ab !important;/*lo de important tiene mas prioridad que cualquier otra cosa rompiendo la ejecucion en cascada, recomendable no usarlo*/
}
/*MEDIA QUERYS:*/
@media (min-width: 480px){/*esto solo se aplicara cuando la ventana mida en x MAS de lo que ponga, se puede hacer lo contrario con max-width*/
    div{/*dentro se ponen tantos selectores como sean necesarios*/
        background-color: red;
    }
}
@media (min-width: 500px) and (max-width: 900px){/*se pueden poner varias condiciones, en este caso seria si el tamagno esta entre esos 2*/
    div{
        background-color: red;
    }
}

/*VARIABLES*/
:root{
    --color-principal: gray;/*se pueden hacer variables para usarlas luego, deben ser creadas en el root y solo funcionaran mas adelante, la variable puede almacenar cualquier valor*/
}
.fondo{
    color: var(--color-principal);/*se establece la variable*/
}

/*UNIDADES DE MEDIDA:*/
/* px = pixeles */
/* % = tanto % del elemento padre */
/* em = uno equivale al tamagno de la fuente (una letra) */
/* rem = igual que em pero relativo al tamagno de fuente del elemento padre */
/* vw = uno equivale a el 1% de ancho del viewport */
/* vh = uno equivale a el 1% de alto del viewport */
/* vmax = uno es 1% del lado mas grande del viewport */
/* vmin = uno es 1% del lado mas pequegno del viewport */
/* ex = uno es que tan alto sea el tamagno de la letra */




h1{
    /*COLORES:*/
    color: black;/*color de texto    se puede poner el color directamente con su nombre*/
    background-color: rgba(255,3,56, 0.5);/*color de fondo de la caja      se puede poner el color con rgb o rgba(x,x,x,0 - 1)*/
    background-color: hsl(359, 100%, 50%, 0.7);/*esto es hue(cual color del arcoiris 0-359), saturacion con % y brillo con % y alpha opcional*/
    color: #f2f1ab;/*se puede poner el color hexadecimal con #, se puede poner 2 digitos mas para hacer el alfa: #ffffff1a*/
    opacity: 0.5;/*cambia la opacidad sin cambiar el color entero*/

    /*PATRONES:*/
    background: linear-gradient(45deg, white 0%, black 50%, red 100%);/*background puede interpretar colores y mas cosas      linear gradient es (grados, color1, color2...) el porcentaje es en que sitio empieza*/
    background-image: url(assets/img.png);/*en este caso pone una imagen de fondo, url puede ser local o alguna pagina que devuelva una imagen*/
    background-repeat: no-repeat;/*no-repeat o repeat, vale tanto para imagenes como para degradados. tambien estan repeat-x o y para un solo eje*/
    background-position: bottom;/*hace que se ponga abajo de donde deberia, tambien se puede con los 4 lados*/
    background-attachment: fixed;/*hace que se mueva junto a la camara*/
    background: black url(assets/img.png) no-repeat bottom;/*cuando no se especifica la propiedad, se pueden poner todas de golpe*/

    /*BORDES:*/
    border-style: dotted;/*aplica un borde (none, hidden, dotted, dashed, solid, double, groove, rigde, inset, outset)*/
    border-style: dotted dashed groove ridge;/*uno para cada lado en el sentido de las agujas del reloj*/
    border-color: black;/*borde negro a todos los lados, se pueden poner varios uno para cada lado*/
    border-width: 1px;/*tamagno de un pixel, se pueden poner varios uno para cada lado*/
    border: 2px dotted blue;/*todos los atributos en una linea*/
    border-radius: 25px 50px;/*para redondearlo, un numero para cada esquina*/ 
}
.caja1{
    border: 5px solid black;
    /*MARGENES Y TAMAGNOS:*/
    height: 300px;/*tamagnos absolutos*/
    width: 300px;
    min-width: 10px;/*este tamagno no podra ser de menos de eso (porque puede cambiar segun contenido o tamagno de la ventana)*/
    max-width: 500px;/*igual pero con el minimo*/
    margin-top: 30px;/*margen exterior de arriba, se puede por todos los lados o poner "margin: arriba derecha abajo izquierda"*/
    padding-top: 30px;/*igual que margin pero el espacio es por dentro*/

    /*DISPLAYS:*/
    display: inline;/*el tamagno se adapta a su contenido, como un span*/
    display: none;/*como si no estuviese*/
    display: block;/*como de normal, igual que un div ocupando todo el ancho*/
    visibility: hidden;/*no se renderiza pero si ocupa espacio*/
    visibility: visible;
    z-index: 2;/*si se renderiza por encima o por debajo, el por defecto es 0*/
    overflow: hidden;/*si el texto o otras cosas adentro se salen de la caja simplemente no se ve, de normal se sale*/
    overflow-x: scroll;/*aparece un scroll si se sale      se puede especificar por x o y*/
    float: left;/*el contenido exterior, como el texto, lo rodeara por la derecha, de normal se pondria abajo*/
    /*POSICIONES:*/
    position: static;/*lo normal*/
    position: relative;/*calcula su posicion en relacion al objeto padre*/
    left: 15px;/*esto lo empujaria hacia la derecha, tambien esta right*/
    top: 15px;/*esto lo empujaria hacia abajo, tambien esta bottom*/
    position:  fixed;/*se mueve junto a la camara, lo de las posiciones es relativo a la esquina de la ventana*/
    left: 0;
    top: 0;
    position: absolute;/*se superpone a otros, sin ocupar espacio*/
    position: sticky;/*igual que relative pero nunca se sale de la camara, moviendose para evitarlo. las posiciones definen cuando va a valorar si se va a salir de la camara*/
}
p{
    /*TEXTO:*/
    text-align: center;/*alineacion (right, left, center, justify, end)*/
    text-decoration-line: underline;/*tipo de linea (underline, overline, line-through)*/
    text-decoration-color: green;/*color de esa linea*/
    text-decoration-style: wavy;/*tipo de linea, similar a lo del borde*/
    text-decoration: underline wavy red 3px;/*poniendolo todo a la vez*/
    text-transform: uppercase;/*cambiar el texto (lowercase, uppercase, capitalize)*/
    text-indent: 50px;/*sangria al texto (primera linea)*/
    letter-spacing: 10px;/*espacio entre letras, se pueden numeros negativos*/
    line-height: 1;/*espacio entre lineas, 1 es lo normal*/
    word-spacing: 20px;/*espacio entre palabras, se pueden numeros negativos*/
    white-space: nowrap;/*el texto se sale del elemento padre*/
    text-shadow: 2px 2px 5px gray;/*distancia x y y de la sombra y cuanto blur y color. se puede separar con , para hacer varias sombras*/
    font-size: 1em;/*tamagno de letra, 1em es lo normal pero tambien se puede hacer con px*/

    /*FUENTES:*/
    font-family: 'Courier New', Courier, monospace;/*intenta poner la primera fuente y si falla va a la siguiente*/
    font-style: italic;/*tipo de letra (normal, italic)*/
    font-weight: bold;/*el tipo de bold, se puede con numeros o poner normal*/
    font-variant: small-caps;/*estilos varios*/
    font-family: 'Tilt Prism', cursive;/*una vez importada la fuente en html desde google fonts se pega tambien en el css*/
}
ul{
    /*LISTAS:*/
    list-style-type: armenian;/*hay varios tipos de ordenacion incluyendo none*/
    list-style-image: url(/assets/icono.ico);/*se puede poner una imagen por cada item*/
}
/*TABLAS:*/
table,tr,th,td{
    
    border: 1px solid black;
}
table{
    border-collapse: collapse;/*sus items se juntan segun borde*/
}
tr:nth-child(even){/*un pseudoselector para filas impares, odd para par*/
    background-color: gray;
}
tr:hover{
    background-color: blue;
}

/*ANIMACIONES*/
@keyframes cuadrado{/*se crea la animacion en si con el nombre que sea*/
    0%{/*se puede poner por porcentajes*/
        background: red;/*se puede con cualquer propiedad escalable*/
    }
    50%{
        background: blue;
    }
    100%{
        background: green;
    }
}
div:hover{
    animation-name: cuadrado;/*cuando este hover se ejecutara esta animacion*/
    animation-duration: 1s;/*se especifica la duracion desde el from hasta el to*/
    animation-timing-function: ease-in-out;/*hay de varios tipos, se suelen usar senoidales*/
    animation-delay: 0.1s;/*cuando se ejecute la animacion tardara esto*/
    animation-iteration-count: infinite;/*provoca que la animacion se quede en bucle*/
    animation-direction: alternate;/*hay de varios tipos, esta hace como boomerang*/
}
/*transicion:*/
@keyframes imagen{/*en este caso sirve mas para transicion*/
    from{/*como esta el estilo al principio*/
        opacity: 1;
    }
    to{/*como esta el estilo al final*/
        opacity: 0.2;
    }
}
img{
    opacity: 1;/*en el caso de la transicion se pone asi el estado normal*/
    transition-property: opacity;/*que va a cambiar*/
    transition-duration: 0.5s;/*todo esto de las transiciones se puede hacer de una con transition: x... o con animation: x...*/
    transition-timing-function: ease-in-out;
}
img:hover{
    opacity: 0.2;/*en el caso de la transicion se pone el estado final donde se ejecute la animacion*/
}

/*FLEXBOX:*/
div.contenedor{
    display: flex;/*el container tiene que ser flex, seran sus items los que se muevan*/
    background-color: #2e2d00;
    flex-direction: row;/*la direccion en la que se ordenan los items, (row orizontal, row-reverse, column vertical, column-reverse)*/
    flex-wrap: wrap;/*como se comportan los items si no hay espacio (nowrap como normal, wrap se autoajustan como bloques, wrap-reverse)*/
    justify-content: space-evenly;/*como se ordenan los items en la coordenada afectada (flex-start, flex-end, center, space-between, space-around, space-evenly)*/
    align-items: center;/*como se ajsutan los items en la coordenada no afectada (flex-start, flex-end, center, stretch, baseline)*/
    align-content: space-around;/*donde se ponen las filas/columnas (flex-start, flex-end, center, space-between, space-around- stretch)*/
}
div.bloque{
    background-color: rgb(117, 167, 84);
    border: 1px solid black;
    margin: 10px;
    padding: 10px;
    width: 40px;
}
/*GRID:*/
div.contenedor2{
    background-color: blue;
    display: grid;/*pone todos sus elementos interiores en cuadricula*/
    grid-template-columns: 100px 100px 100px;/*como se distribuye en columnas, se puede poner auto*/
    grid-template-rows: repeat(4, 100px);/*y en columnas            repeat pone varias veces el mismo valor*/
    justify-items: end;/*en caso de que sobre espacio, como se escalan los bloques (start, center, end, stretch(cambia tamagno)), el tamagno de los bloques puede verse afectado*/
    justify-content: center;/*en que lugar x se ponen los bloques (start, center, end, space-around, space-between, space-evenly)*/
    align-content: start;/*lo mismo pero en y (start, center, end, space-around, space-between, space-evenly)*/
    grid-auto-flow: column;/*el orden de los elementos (row, column, dense)*/
    grid-template-areas:/*si en html los elementos tienen nombre, se puede hacer que ocupen varias casillas, no se pueden usar los grid-template-x*/
        "a a b"
        "a a b"
        "e f g"
        "i j j"
    ;
}
div.bloque2{
    background-color: aquamarine;
    /*width: 50px;/*si no se pusiese la dimension x o y ocuparia todo lo que pueda*/
    /*height: 50px;*/
    border: 1px solid black;
    margin: 10px;
}

/*TRANSFORM:*/
.block{
    /*estas funciones cambian las propiedades de transform, no recomendable usarlas*/
    transform: rotate(45deg);/*algunos elementos pueden ser rotados asi*/
    transform: translate(3,50);/*cambiar la posicion x y y*/
    transform: scale(12);/*cambiar el tamagno*/
}